ARG POETRY_VENV=/opt/venv
ARG POETRY_VERSION=1.7.1



######################################
# BASE
FROM python:3.12.1-slim-bookworm as base

ARG POETRY_VENV

ENV PATH="${POETRY_VENV}/bin:${PATH}"



######################################
# BUILDER
FROM base as builder

ARG INSTALL_DEV=false
ARG POETRY_VERSION
ARG POETRY_VENV
WORKDIR /tmp

RUN apt-get update && \
    apt-get install -y \
    libpq-dev \
    gcc && \
    rm -rf /var/lib/apt/lists/*


COPY ./zpodapi/pyproject.toml ./zpodapi/poetry.lock* /tmp/
RUN python3 -m venv $POETRY_VENV \
    && . $POETRY_VENV/bin/activate \
    && $POETRY_VENV/bin/pip install --no-cache-dir -U pip setuptools \
    && $POETRY_VENV/bin/pip install --no-cache-dir poetry==${POETRY_VERSION} \
    && poetry install --no-interaction --no-cache $(test "$INSTALL_DEV" != "true" && echo "--without dev")



######################################
# MAIN
FROM base as main

ARG POETRY_VENV

RUN apt-get update && \
    apt-get install -y \
    libpq5 \
    git && \
    rm -rf /var/lib/apt/lists/*

COPY --from=builder ${POETRY_VENV} ${POETRY_VENV}

ENV PYTHONPATH=/zpodcore/src

WORKDIR /zpodcore
CMD ["tail", "-f", "/dev/null"]



######################################
# DEV
FROM main as dev
CMD ["python", "/zpodcore/scripts/startup/start_reload.py"]



######################################
# PROD
FROM main as production
COPY ./zpodapi/scripts /zpodcore/scripts
COPY ./zpodapi/tests /zpodcore/tests
COPY ./zpodapi/src/zpodapi /zpodcore/src/zpodapi
COPY ./zpodcommon/src/zpodcommon /zpodcore/src/zpodcommon
CMD ["python", "/zpodcore/scripts/startup/start.py"]
